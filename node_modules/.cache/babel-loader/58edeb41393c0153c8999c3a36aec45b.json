{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chigurupatieswari/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { Button, Input, Select, MenuItem, InputLabel, FormControl, FormControlLabel, FormLabel, RadioGroup, Radio, CssBaseline, Container, Typography, Grid, Paper, TextField } from \"@material-ui/core\";\n\nfunction App() {\n  _s();\n\n  const citysArray = [{\n    cityId: 1,\n    cityName: \"Minneapolis\"\n  }, {\n    cityId: 2,\n    cityName: \"Rochester\"\n  }, {\n    cityId: 3,\n    cityName: \"Bloomington\"\n  }, {\n    cityId: 4,\n    cityName: \"Duluth\"\n  }, {\n    cityId: 5,\n    cityName: \"Saint Paul\"\n  }];\n  const [name, setName] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n\n  const handleNameOnChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleCityOnChange = event => {\n    setSelectedCity(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"simpleForm\",\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: false,\n              required: true,\n              id: \"nameInput\",\n              label: \"Name\",\n              value: name,\n              defaultValue: \"\",\n              helperText: \"Please enter your name\",\n              onChange: handleNameOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"citySelection\",\n              required: true,\n              select: true,\n              label: \"City\",\n              value: selectedCity,\n              onChange: handleCityOnChange,\n              helperText: \"Please select your city\",\n              children: citysArray.map(cityInfo => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: cityInfo.cityName,\n                children: cityInfo.cityName\n              }, cityInfo.cityId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: false,\n              required: true,\n              id: \"emailInput\",\n              label: \"Email\",\n              value: email,\n              defaultValue: \"\",\n              helperText: \"Please enter your email\",\n              onChange: handleNameOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"s6fUTVMIe5Xf0QsHpLFaRZRVJqk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chigurupatieswari/Desktop/my-app/src/App.js"],"names":["styled","React","useState","Button","Input","Select","MenuItem","InputLabel","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","CssBaseline","Container","Typography","Grid","Paper","TextField","App","citysArray","cityId","cityName","name","setName","selectedCity","setSelectedCity","handleNameOnChange","event","target","value","handleCityOnChange","map","cityInfo","email"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  CssBaseline,\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  TextField,\n} from \"@material-ui/core\";\n\nfunction App() {\n  const citysArray = [\n    {\n      cityId: 1,\n      cityName: \"Minneapolis\",\n    },\n    {\n      cityId: 2,\n      cityName: \"Rochester\",\n    },\n    {\n      cityId: 3,\n      cityName: \"Bloomington\",\n    },\n    {\n      cityId: 4,\n      cityName: \"Duluth\",\n    },\n    {\n      cityId: 5,\n      cityName: \"Saint Paul\",\n    },\n  ];\n  const [name, setName] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n\n  const handleNameOnChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleCityOnChange = (event) => {\n    setSelectedCity(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"sm\">\n        <form className={\"simpleForm\"} noValidate autoComplete=\"off\">\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                error={false}\n                required\n                id=\"nameInput\"\n                label=\"Name\"\n                value={name}\n                defaultValue=\"\"\n                helperText=\"Please enter your name\"\n                onChange={handleNameOnChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"citySelection\"\n                required\n                select\n                label=\"City\"\n                value={selectedCity}\n                onChange={handleCityOnChange}\n                helperText=\"Please select your city\"\n              >\n                {citysArray.map((cityInfo) => (\n                  <MenuItem key={cityInfo.cityId} value={cityInfo.cityName}>\n                    {cityInfo.cityName}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                error={false}\n                required\n                id=\"emailInput\"\n                label=\"Email\"\n                value={email}\n                defaultValue=\"\"\n                helperText=\"Please enter your email\"\n                onChange={handleNameOnChange}\n              />\n            </Grid>\n            <Grid item xs={6} sm={3}></Grid>\n          </Grid>\n          {/* <header className=\"App-header\"></header> */}\n          {/* <InputLabel id=\"demo-simple-select-helper-label\">Age</InputLabel>\n\n          <Select\n            labelId=\"demo-simple-select-helper-label\"\n            id=\"demo-simple-select-helper\"\n            // value={}\n            // onChange={}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Gender</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender1\"\n              // value={undefined}\n              // onChange={undefined}\n            >\n              <FormControlLabel\n                value=\"female\"\n                control={<Radio />}\n                label=\"Female\"\n              />\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel\n                value=\"other\"\n                control={<Radio />}\n                label=\"Other\"\n              />\n              <FormControlLabel\n                value=\"disabled\"\n                disabled\n                control={<Radio />}\n                label=\"(Disabled option)\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <Button color=\"primary\">Hello World</Button> */}\n        </form>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}