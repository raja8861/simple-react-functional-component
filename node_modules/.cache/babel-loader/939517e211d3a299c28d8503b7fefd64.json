{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chigurupatieswari/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { Button, Input, Select, MenuItem, InputLabel, FormControl, FormControlLabel, FormLabel, RadioGroup, Radio, CssBaseline, Container, Typography, Grid, Paper, TextField, FormHelperText } from \"@material-ui/core\";\n\nfunction App() {\n  _s();\n\n  const citysArray = [{\n    cityId: 1,\n    cityName: \"Minneapolis\"\n  }, {\n    cityId: 2,\n    cityName: \"Rochester\"\n  }, {\n    cityId: 3,\n    cityName: \"Bloomington\"\n  }, {\n    cityId: 4,\n    cityName: \"Duluth\"\n  }, {\n    cityId: 5,\n    cityName: \"Saint Paul\"\n  }];\n  const [name, setName] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [notification, setNotification] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [selectedCityError, setSelectedCityError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [notificationError, setNotificationError] = useState(false);\n\n  const handleNameOnChange = event => {\n    event.preventDefault();\n\n    if (event.target.value !== \"\") {\n      setNameError(false);\n      setName(event.target.value);\n    }\n  };\n\n  const handleCityOnChange = event => {\n    event.preventDefault();\n\n    if (event.target.value !== \"\") {\n      setSelectedCityError(false);\n      setSelectedCity(event.target.value);\n    }\n  };\n\n  const handleEmailOnChange = event => {\n    if (event.target.value !== \"\") {\n      setEmailError(false);\n      setEmail(event.target.value);\n    }\n  };\n\n  const handleNotificationChange = event => {\n    if (event.target.value !== \"\") {\n      setNotification(event.target.value);\n    }\n  };\n\n  const handleNameOnBlur = event => {\n    const hasError = !event.target.value ? true : false;\n    setNameError(hasError);\n  };\n\n  const handleCityOnClose = event => {\n    event.preventDefault();\n    const hasError = !event.target.value ? true : false;\n    setSelectedCityError(hasError);\n  };\n\n  const handleEmailOnBlur = event => {\n    const hasError = !event.target.value ? true : false;\n    setEmailError(hasError);\n  };\n\n  const handleNotificationOnBlur = event => {\n    const hasError = !event.target.value ? true : false;\n    setNotificationError(hasError);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"simpleForm\",\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: nameError,\n              required: true,\n              id: \"nameInput\",\n              label: \"Name\",\n              value: name,\n              helperText: \"Please enter your name\",\n              onChange: handleNameOnChange,\n              onBlur: handleNameOnBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              className: \"citySelection\",\n              error: selectedCityError,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"cityLable\",\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"cityLable\",\n                id: \"citySelection\",\n                value: selectedCity,\n                onChange: handleCityOnChange,\n                onClose: handleCityOnClose,\n                children: citysArray.map(cityInfo => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: cityInfo.cityName,\n                  children: cityInfo.cityName\n                }, cityInfo.cityId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: \"Please select a city\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: emailError,\n              required: true,\n              id: \"emailInput\",\n              label: \"Email\",\n              value: email,\n              helperText: \"Please enter your email\",\n              onChange: handleEmailOnChange,\n              onBlur: handleEmailOnBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                error: notificationError,\n                \"aria-label\": \"ReciveNotification\",\n                name: \"Recive notification\",\n                value: notification,\n                onChange: handleNotificationChange,\n                onBlur: event => handleNotificationOnBlur(event),\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"Yes\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 30\n                  }, this),\n                  label: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"No\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 57\n                  }, this),\n                  label: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4BYDV+LiSTSOf4c1F5M9HOmqQ58=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chigurupatieswari/Desktop/my-app/src/App.js"],"names":["styled","React","useState","Button","Input","Select","MenuItem","InputLabel","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","CssBaseline","Container","Typography","Grid","Paper","TextField","FormHelperText","App","citysArray","cityId","cityName","name","setName","selectedCity","setSelectedCity","email","setEmail","notification","setNotification","nameError","setNameError","selectedCityError","setSelectedCityError","emailError","setEmailError","notificationError","setNotificationError","handleNameOnChange","event","preventDefault","target","value","handleCityOnChange","handleEmailOnChange","handleNotificationChange","handleNameOnBlur","hasError","handleCityOnClose","handleEmailOnBlur","handleNotificationOnBlur","map","cityInfo"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  CssBaseline,\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  TextField,\n  FormHelperText,\n} from \"@material-ui/core\";\n\nfunction App() {\n  const citysArray = [\n    {\n      cityId: 1,\n      cityName: \"Minneapolis\",\n    },\n    {\n      cityId: 2,\n      cityName: \"Rochester\",\n    },\n    {\n      cityId: 3,\n      cityName: \"Bloomington\",\n    },\n    {\n      cityId: 4,\n      cityName: \"Duluth\",\n    },\n    {\n      cityId: 5,\n      cityName: \"Saint Paul\",\n    },\n  ];\n  const [name, setName] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [notification, setNotification] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [selectedCityError, setSelectedCityError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [notificationError, setNotificationError] = useState(false);\n\n  const handleNameOnChange = (event) => {\n    event.preventDefault();\n    if (event.target.value !== \"\") {\n      setNameError(false);\n      setName(event.target.value);\n    }\n  };\n\n  const handleCityOnChange = (event) => {\n    event.preventDefault();\n    if (event.target.value !== \"\") {\n      setSelectedCityError(false);\n      setSelectedCity(event.target.value);\n    }\n  };\n\n  const handleEmailOnChange = (event) => {\n    if (event.target.value !== \"\") {\n      setEmailError(false);\n      setEmail(event.target.value);\n    }\n  };\n\n  const handleNotificationChange = (event) => {\n    if (event.target.value !== \"\") {\n      setNotification(event.target.value);\n    }\n  };\n\n  const handleNameOnBlur = (event) => {\n    const hasError = !event.target.value ? true : false;\n    setNameError(hasError);\n  };\n\n  const handleCityOnClose = (event) => {\n    event.preventDefault();\n    const hasError = !event.target.value ? true : false;\n    setSelectedCityError(hasError);\n  };\n\n  const handleEmailOnBlur = (event) => {\n    const hasError = !event.target.value ? true : false;\n    setEmailError(hasError);\n  };\n\n  const handleNotificationOnBlur = (event) => {\n    const hasError = !event.target.value ? true : false;\n    setNotificationError(hasError);\n  };\n\n  return (\n    <React.Fragment>\n      <header className=\"App-header\"></header>\n\n      <Container maxWidth=\"sm\">\n        <form className={\"simpleForm\"} noValidate autoComplete=\"off\">\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                error={nameError}\n                required\n                id=\"nameInput\"\n                label=\"Name\"\n                value={name}\n                helperText=\"Please enter your name\"\n                onChange={handleNameOnChange}\n                onBlur={handleNameOnBlur}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                required\n                className={\"citySelection\"}\n                error={selectedCityError}\n              >\n                <InputLabel id=\"cityLable\">Age</InputLabel>\n                <Select\n                  labelId=\"cityLable\"\n                  id=\"citySelection\"\n                  value={selectedCity}\n                  onChange={handleCityOnChange}\n                  onClose={handleCityOnClose}\n                >\n                  {citysArray.map((cityInfo) => (\n                    <MenuItem key={cityInfo.cityId} value={cityInfo.cityName}>\n                      {cityInfo.cityName}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>Please select a city</FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                error={emailError}\n                required\n                id=\"emailInput\"\n                label=\"Email\"\n                value={email}\n                helperText=\"Please enter your email\"\n                onChange={handleEmailOnChange}\n                onBlur={handleEmailOnBlur}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Gender</FormLabel>\n                <RadioGroup\n                  error={notificationError}\n                  aria-label=\"ReciveNotification\"\n                  name=\"Recive notification\"\n                  value={notification}\n                  onChange={handleNotificationChange}\n                  onBlur={(event) => handleNotificationOnBlur(event)}\n                >\n                  <FormControlLabel\n                    value=\"Yes\"\n                    control={<Radio />}\n                    label=\"Yes\"\n                  />\n                  <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}