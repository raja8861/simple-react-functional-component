{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chigurupatieswari/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Button, Select, MenuItem, InputLabel, FormControl, FormControlLabel, FormLabel, RadioGroup, Radio, Container, Typography, Grid, Paper, TextField, FormHelperText } from \"@material-ui/core\";\n\nfunction App() {\n  _s();\n\n  const citysArray = [{\n    cityId: 1,\n    cityName: \"Minneapolis\"\n  }, {\n    cityId: 2,\n    cityName: \"Rochester\"\n  }, {\n    cityId: 3,\n    cityName: \"Bloomington\"\n  }, {\n    cityId: 4,\n    cityName: \"Duluth\"\n  }, {\n    cityId: 5,\n    cityName: \"Saint Paul\"\n  }];\n  const [name, setName] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [isValidEmail, setIsValidEmail] = useState();\n  const [notification, setNotification] = useState(true);\n  const [nameError, setNameError] = useState(false);\n  const [selectedCityError, setSelectedCityError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [notificationError, setNotificationError] = useState(false);\n  const [isFormSubmitted, handleFormSubmit] = useState(false);\n\n  const handleNameOnChange = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.target.value !== \"\") {\n      setNameError(false);\n      setName(event.target.value);\n    }\n  };\n\n  const handleCityOnChange = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.target.value !== \"\") {\n      setSelectedCityError(false);\n      setSelectedCity(event.target.value);\n    }\n  };\n\n  const handleEmailOnChange = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.target.value !== \"\") {\n      setEmail(event.target.value);\n      const pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (pattern.test(event.target.value)) {\n        setEmailError(true);\n      }\n\n      setIsValidEmail();\n    }\n  };\n\n  const handleNotificationChange = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.target.value !== \"\") {\n      setNotificationError(false);\n      setNotification(event.target.value);\n    }\n  };\n\n  const handleNameOnBlur = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const hasError = !event.target.value ? true : false;\n    setNameError(hasError);\n  };\n\n  const handleCityOnClose = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const hasError = !event.target.value ? true : false;\n    setSelectedCityError(hasError);\n  };\n\n  const handleEmailOnBlur = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const hasError = !event.target.value ? true : false;\n    setEmailError(hasError);\n  };\n\n  const handleNotificationOnBlur = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const hasError = !event.target.value ? true : false;\n    setNotificationError(hasError);\n  };\n\n  const formRest = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setName(\"\");\n    setSelectedCity(\"\");\n    setEmail(\"\");\n    setNotification(\"\");\n  };\n\n  const submitForm = () => {\n    handleFormSubmit(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"Sample Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"simpleForm\",\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: nameError,\n              required: true,\n              id: \"nameInput\",\n              label: \"Name\",\n              value: name,\n              helperText: \"Please enter your name\",\n              onChange: handleNameOnChange,\n              onBlur: handleNameOnBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              className: \"citySelection\",\n              error: selectedCityError,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"cityLable\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"cityLable\",\n                id: \"citySelection\",\n                value: selectedCity,\n                onChange: handleCityOnChange,\n                onClose: handleCityOnClose,\n                children: citysArray.map(cityInfo => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: cityInfo.cityName,\n                  children: cityInfo.cityName\n                }, cityInfo.cityId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: \"Please select a city\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: emailError,\n              required: true,\n              id: \"emailInput\",\n              label: \"Email\",\n              value: email,\n              helperText: `Please enter your valid email`,\n              onChange: handleEmailOnChange,\n              onBlur: handleEmailOnBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                children: \"Receive notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                error: notificationError,\n                \"aria-label\": \"ReciveNotification\",\n                name: \"Recive notification\",\n                value: notification,\n                onChange: handleNotificationChange,\n                onBlur: event => handleNotificationOnBlur(event),\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"Yes\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 30\n                  }, this),\n                  label: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"No\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 57\n                  }, this),\n                  label: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 6,\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"resetBtn\",\n              variant: \"contained\",\n              onClick: formRest,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"submitBtn\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: submitForm,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), isFormSubmitted && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: `\n\n        ** Summary of submited Form Data **\n          Name   : ${name}\n\n          City   : ${selectedCity}\n\n          Email  : ${email}\n\n          Recive Notification  : ${\"\"} \n        \n        \n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"exzS7b/xOMJeUp674HT4LnLIKLM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chigurupatieswari/Desktop/my-app/src/App.js"],"names":["React","useState","Button","Select","MenuItem","InputLabel","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","Container","Typography","Grid","Paper","TextField","FormHelperText","App","citysArray","cityId","cityName","name","setName","selectedCity","setSelectedCity","email","setEmail","isValidEmail","setIsValidEmail","notification","setNotification","nameError","setNameError","selectedCityError","setSelectedCityError","emailError","setEmailError","notificationError","setNotificationError","isFormSubmitted","handleFormSubmit","handleNameOnChange","event","preventDefault","stopPropagation","target","value","handleCityOnChange","handleEmailOnChange","pattern","test","handleNotificationChange","handleNameOnBlur","hasError","handleCityOnClose","handleEmailOnBlur","handleNotificationOnBlur","formRest","submitForm","map","cityInfo"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  TextField,\n  FormHelperText,\n} from \"@material-ui/core\";\n\nfunction App() {\n  const citysArray = [\n    {\n      cityId: 1,\n      cityName: \"Minneapolis\",\n    },\n    {\n      cityId: 2,\n      cityName: \"Rochester\",\n    },\n    {\n      cityId: 3,\n      cityName: \"Bloomington\",\n    },\n    {\n      cityId: 4,\n      cityName: \"Duluth\",\n    },\n    {\n      cityId: 5,\n      cityName: \"Saint Paul\",\n    },\n  ];\n  const [name, setName] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [isValidEmail, setIsValidEmail] = useState();\n  const [notification, setNotification] = useState(true);\n  const [nameError, setNameError] = useState(false);\n  const [selectedCityError, setSelectedCityError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [notificationError, setNotificationError] = useState(false);\n  const [isFormSubmitted, handleFormSubmit] = useState(false);\n\n  const handleNameOnChange = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.target.value !== \"\") {\n      setNameError(false);\n      setName(event.target.value);\n    }\n  };\n\n  const handleCityOnChange = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.target.value !== \"\") {\n      setSelectedCityError(false);\n      setSelectedCity(event.target.value);\n    }\n  };\n\n  const handleEmailOnChange = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.target.value !== \"\") {\n      setEmail(event.target.value);\n      const pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (pattern.test(event.target.value)) {\n        setEmailError(true);\n      }\n      setIsValidEmail();\n    }\n  };\n\n  const handleNotificationChange = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.target.value !== \"\") {\n      setNotificationError(false);\n      setNotification(event.target.value);\n    }\n  };\n\n  const handleNameOnBlur = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const hasError = !event.target.value ? true : false;\n    setNameError(hasError);\n  };\n\n  const handleCityOnClose = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const hasError = !event.target.value ? true : false;\n    setSelectedCityError(hasError);\n  };\n\n  const handleEmailOnBlur = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const hasError = !event.target.value ? true : false;\n    setEmailError(hasError);\n  };\n\n  const handleNotificationOnBlur = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const hasError = !event.target.value ? true : false;\n    setNotificationError(hasError);\n  };\n\n  const formRest = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setName(\"\");\n    setSelectedCity(\"\");\n    setEmail(\"\");\n    setNotification(\"\");\n  };\n\n  const submitForm = () => {\n    handleFormSubmit(true);\n  };\n\n  return (\n    <React.Fragment>\n      <header className=\"App-header\">Sample Form</header>\n      <Container maxWidth=\"sm\">\n        <form className={\"simpleForm\"} noValidate autoComplete=\"off\">\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                error={nameError}\n                required\n                id=\"nameInput\"\n                label=\"Name\"\n                value={name}\n                helperText=\"Please enter your name\"\n                onChange={handleNameOnChange}\n                onBlur={handleNameOnBlur}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                required\n                className={\"citySelection\"}\n                error={selectedCityError}\n              >\n                <InputLabel id=\"cityLable\">City</InputLabel>\n                <Select\n                  labelId=\"cityLable\"\n                  id=\"citySelection\"\n                  value={selectedCity}\n                  onChange={handleCityOnChange}\n                  onClose={handleCityOnClose}\n                >\n                  {citysArray.map((cityInfo) => (\n                    <MenuItem key={cityInfo.cityId} value={cityInfo.cityName}>\n                      {cityInfo.cityName}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText>Please select a city</FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                error={emailError}\n                required\n                id=\"emailInput\"\n                label=\"Email\"\n                value={email}\n                helperText={`Please enter your valid email`}\n                onChange={handleEmailOnChange}\n                onBlur={handleEmailOnBlur}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\" required>\n                <FormLabel component=\"legend\">Receive notifications</FormLabel>\n                <RadioGroup\n                  error={notificationError}\n                  aria-label=\"ReciveNotification\"\n                  name=\"Recive notification\"\n                  value={notification}\n                  onChange={handleNotificationChange}\n                  onBlur={(event) => handleNotificationOnBlur(event)}\n                >\n                  <FormControlLabel\n                    value=\"Yes\"\n                    control={<Radio />}\n                    label=\"Yes\"\n                  />\n                  <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={6} sm={6} spacing={5}>\n              <Button\n                className={\"resetBtn\"}\n                variant=\"contained\"\n                onClick={formRest}\n              >\n                Reset\n              </Button>\n              <Button\n                className={\"submitBtn\"}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={submitForm}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n      {isFormSubmitted && (\n        <Container maxWidth=\"sm\">\n          {`\n\n        ** Summary of submited Form Data **\n          Name   : ${name}\n\n          City   : ${selectedCity}\n\n          Email  : ${email}\n\n          Recive Notification  : ${\"\"} \n        \n        \n        `}\n        </Container>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}