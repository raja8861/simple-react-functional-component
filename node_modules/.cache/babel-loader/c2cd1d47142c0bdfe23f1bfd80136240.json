{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chigurupatieswari/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { Button, Input, Select, MenuItem, InputLabel, FormControl, FormControlLabel, FormLabel, RadioGroup, Radio, CssBaseline, Container, Typography, Grid, Paper, TextField } from \"@material-ui/core\";\n\nfunction App() {\n  _s();\n\n  const citysArray = [{\n    cityId: 1,\n    cityName: \"Minneapolis\"\n  }, {\n    cityId: 2,\n    cityName: \"Rochester\"\n  }, {\n    cityId: 3,\n    cityName: \"Bloomington\"\n  }, {\n    cityId: 4,\n    cityName: \"Duluth\"\n  }, {\n    cityId: 5,\n    cityName: \"Saint Paul\"\n  }];\n  const [name, setName] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [notification, setNotification] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [selectedCityError, setSelectedCityError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [notificationError, setNotificationError] = useState(false);\n\n  const handleNameOnChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleCityOnChange = event => {\n    setSelectedCity(event.target.value);\n  };\n\n  const handleEmailOnChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const handleNotificationChange = event => {\n    setNotification(event.target.value);\n  };\n\n  const handleNameOnBlur = event => {\n    const hasError = !event.target.value ? true : false;\n    setNameError(hasError);\n  };\n\n  const handleCityOnClose = event => {\n    const hasError = !event.target.value ? true : false;\n    setSelectedCityError(hasError);\n  };\n\n  const handleEmailOnBlur = event => {\n    const hasError = !event.target.value ? true : false;\n    setEmailError(hasError);\n  };\n\n  const handleNotificationOnBlur = event => {\n    const hasError = !event.target.value ? true : false;\n    setNotificationError(hasError);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"simpleForm\",\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: nameError,\n              required: true,\n              id: \"nameInput\",\n              label: \"Name\",\n              value: name,\n              helperText: \"Please enter your name\",\n              onChange: handleNameOnChange,\n              onBlur: handleNameOnBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Select // native\n            // value={state.age}\n            // onChange={handleChange}\n            , {\n              inputProps: {\n                id: \"citySelection\",\n                name: \"age\",\n                label: \"name\",\n                required: true,\n                helperText: \"Please select your city\"\n              },\n              error: selectedCityError,\n              required: true // select\n              // label=\"name\"\n              ,\n              value: selectedCity,\n              onChange: handleCityOnChange,\n              onClose: handleCityOnClose,\n              children: citysArray.map(cityInfo => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cityInfo.cityName,\n                children: cityInfo.cityName\n              }, cityInfo.cityId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: \"Required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: emailError,\n              required: true,\n              id: \"emailInput\",\n              label: \"Email\",\n              value: email,\n              helperText: \"Please enter your email\",\n              onChange: handleEmailOnChange,\n              onBlur: handleEmailOnBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                error: notificationError,\n                \"aria-label\": \"ReciveNotification\",\n                name: \"Recive notification\",\n                value: notification,\n                onChange: handleNotificationChange,\n                onBlur: event => handleNotificationOnBlur(event),\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"Yes\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 30\n                  }, this),\n                  label: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"No\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 57\n                  }, this),\n                  label: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4BYDV+LiSTSOf4c1F5M9HOmqQ58=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chigurupatieswari/Desktop/my-app/src/App.js"],"names":["styled","React","useState","Button","Input","Select","MenuItem","InputLabel","FormControl","FormControlLabel","FormLabel","RadioGroup","Radio","CssBaseline","Container","Typography","Grid","Paper","TextField","App","citysArray","cityId","cityName","name","setName","selectedCity","setSelectedCity","email","setEmail","notification","setNotification","nameError","setNameError","selectedCityError","setSelectedCityError","emailError","setEmailError","notificationError","setNotificationError","handleNameOnChange","event","target","value","handleCityOnChange","handleEmailOnChange","handleNotificationChange","handleNameOnBlur","hasError","handleCityOnClose","handleEmailOnBlur","handleNotificationOnBlur","id","label","required","helperText","map","cityInfo"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,gBAPF,EAQEC,SARF,EASEC,UATF,EAUEC,KAVF,EAWEC,WAXF,EAYEC,SAZF,EAaEC,UAbF,EAcEC,IAdF,EAeEC,KAfF,EAgBEC,SAhBF,QAiBO,mBAjBP;;AAmBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,UAAU,GAAG,CACjB;AACEC,IAAAA,MAAM,EAAE,CADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADiB,EAKjB;AACED,IAAAA,MAAM,EAAE,CADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALiB,EASjB;AACED,IAAAA,MAAM,EAAE,CADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GATiB,EAajB;AACED,IAAAA,MAAM,EAAE,CADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAbiB,EAiBjB;AACED,IAAAA,MAAM,EAAE,CADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAjBiB,CAAnB;AAsBA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC+B,iBAAD,EAAoBC,oBAApB,IAA4ChC,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACiC,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACmC,iBAAD,EAAoBC,oBAApB,IAA4CpC,QAAQ,CAAC,KAAD,CAA1D;;AAEA,QAAMqC,kBAAkB,GAAIC,KAAD,IAAW;AACpChB,IAAAA,OAAO,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIH,KAAD,IAAW;AACpCd,IAAAA,eAAe,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAME,mBAAmB,GAAIJ,KAAD,IAAW;AACrCZ,IAAAA,QAAQ,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMG,wBAAwB,GAAIL,KAAD,IAAW;AAC1CV,IAAAA,eAAe,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMI,gBAAgB,GAAIN,KAAD,IAAW;AAClC,UAAMO,QAAQ,GAAG,CAACP,KAAK,CAACC,MAAN,CAAaC,KAAd,GAAsB,IAAtB,GAA6B,KAA9C;AACAV,IAAAA,YAAY,CAACe,QAAD,CAAZ;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAIR,KAAD,IAAW;AACnC,UAAMO,QAAQ,GAAG,CAACP,KAAK,CAACC,MAAN,CAAaC,KAAd,GAAsB,IAAtB,GAA6B,KAA9C;AACAR,IAAAA,oBAAoB,CAACa,QAAD,CAApB;AACD,GAHD;;AAKA,QAAME,iBAAiB,GAAIT,KAAD,IAAW;AACnC,UAAMO,QAAQ,GAAG,CAACP,KAAK,CAACC,MAAN,CAAaC,KAAd,GAAsB,IAAtB,GAA6B,KAA9C;AACAN,IAAAA,aAAa,CAACW,QAAD,CAAb;AACD,GAHD;;AAKA,QAAMG,wBAAwB,GAAIV,KAAD,IAAW;AAC1C,UAAMO,QAAQ,GAAG,CAACP,KAAK,CAACC,MAAN,CAAaC,KAAd,GAAsB,IAAtB,GAA6B,KAA9C;AACAJ,IAAAA,oBAAoB,CAACS,QAAD,CAApB;AACD,GAHD;;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE;AAAM,QAAA,SAAS,EAAE,YAAjB;AAA+B,QAAA,UAAU,MAAzC;AAA0C,QAAA,YAAY,EAAC,KAAvD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,KAAK,EAAEhB,SADT;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,EAAE,EAAC,WAHL;AAIE,cAAA,KAAK,EAAC,MAJR;AAKE,cAAA,KAAK,EAAER,IALT;AAME,cAAA,UAAU,EAAC,wBANb;AAOE,cAAA,QAAQ,EAAEgB,kBAPZ;AAQE,cAAA,MAAM,EAAEO;AARV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,oCAGE,QAAC,MAAD,CACE;AACA;AACA;AAHF;AAIE,cAAA,UAAU,EAAE;AACVK,gBAAAA,EAAE,EAAE,eADM;AAEV5B,gBAAAA,IAAI,EAAE,KAFI;AAGV6B,gBAAAA,KAAK,EAAE,MAHG;AAIVC,gBAAAA,QAAQ,EAAE,IAJA;AAKVC,gBAAAA,UAAU,EAAE;AALF,eAJd;AAWE,cAAA,KAAK,EAAErB,iBAXT;AAYE,cAAA,QAAQ,MAZV,CAaE;AACA;AAdF;AAeE,cAAA,KAAK,EAAER,YAfT;AAgBE,cAAA,QAAQ,EAAEkB,kBAhBZ;AAiBE,cAAA,OAAO,EAAEK,iBAjBX;AAAA,wBAmBG5B,UAAU,CAACmC,GAAX,CAAgBC,QAAD,iBACd;AAA8B,gBAAA,KAAK,EAAEA,QAAQ,CAAClC,QAA9C;AAAA,0BACGkC,QAAQ,CAAClC;AADZ,iBAAakC,QAAQ,CAACnC,MAAtB;AAAA;AAAA;AAAA;AAAA,sBADD;AAnBH;AAAA;AAAA;AAAA;AAAA,oBAHF,eA4BE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eA6DE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,KAAK,EAAEc,UADT;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,EAAE,EAAC,YAHL;AAIE,cAAA,KAAK,EAAC,OAJR;AAKE,cAAA,KAAK,EAAER,KALT;AAME,cAAA,UAAU,EAAC,yBANb;AAOE,cAAA,QAAQ,EAAEiB,mBAPZ;AAQE,cAAA,MAAM,EAAEK;AARV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA7DF,eAyEE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,WAAD;AAAa,cAAA,SAAS,EAAC,UAAvB;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,UAAD;AACE,gBAAA,KAAK,EAAEZ,iBADT;AAEE,8BAAW,oBAFb;AAGE,gBAAA,IAAI,EAAC,qBAHP;AAIE,gBAAA,KAAK,EAAER,YAJT;AAKE,gBAAA,QAAQ,EAAEgB,wBALZ;AAME,gBAAA,MAAM,EAAGL,KAAD,IAAWU,wBAAwB,CAACV,KAAD,CAN7C;AAAA,wCAQE,QAAC,gBAAD;AACE,kBAAA,KAAK,EAAC,KADR;AAEE,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,0BAFX;AAGE,kBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,wBARF,eAaE,QAAC,gBAAD;AAAkB,kBAAA,KAAK,EAAC,IAAxB;AAA6B,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,0BAAtC;AAAiD,kBAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwGD;;GA5KQrB,G;;KAAAA,G;AA8KT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  CssBaseline,\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  TextField,\n} from \"@material-ui/core\";\n\nfunction App() {\n  const citysArray = [\n    {\n      cityId: 1,\n      cityName: \"Minneapolis\",\n    },\n    {\n      cityId: 2,\n      cityName: \"Rochester\",\n    },\n    {\n      cityId: 3,\n      cityName: \"Bloomington\",\n    },\n    {\n      cityId: 4,\n      cityName: \"Duluth\",\n    },\n    {\n      cityId: 5,\n      cityName: \"Saint Paul\",\n    },\n  ];\n  const [name, setName] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [notification, setNotification] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [selectedCityError, setSelectedCityError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [notificationError, setNotificationError] = useState(false);\n\n  const handleNameOnChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleCityOnChange = (event) => {\n    setSelectedCity(event.target.value);\n  };\n\n  const handleEmailOnChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handleNotificationChange = (event) => {\n    setNotification(event.target.value);\n  };\n\n  const handleNameOnBlur = (event) => {\n    const hasError = !event.target.value ? true : false;\n    setNameError(hasError);\n  };\n\n  const handleCityOnClose = (event) => {\n    const hasError = !event.target.value ? true : false;\n    setSelectedCityError(hasError);\n  };\n\n  const handleEmailOnBlur = (event) => {\n    const hasError = !event.target.value ? true : false;\n    setEmailError(hasError);\n  };\n\n  const handleNotificationOnBlur = (event) => {\n    const hasError = !event.target.value ? true : false;\n    setNotificationError(hasError);\n  };\n\n  return (\n    <React.Fragment>\n      <header className=\"App-header\"></header>\n\n      <Container maxWidth=\"sm\">\n        <form className={\"simpleForm\"} noValidate autoComplete=\"off\">\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                error={nameError}\n                required\n                id=\"nameInput\"\n                label=\"Name\"\n                value={name}\n                helperText=\"Please enter your name\"\n                onChange={handleNameOnChange}\n                onBlur={handleNameOnBlur}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {/* <FormControl required className={classes.formControl}>\n                <InputLabel htmlFor=\"age-native-required\">Age</InputLabel> */}\n              <Select\n                // native\n                // value={state.age}\n                // onChange={handleChange}\n                inputProps={{\n                  id: \"citySelection\",\n                  name: \"age\",\n                  label: \"name\",\n                  required: true,\n                  helperText: \"Please select your city\",\n                }}\n                error={selectedCityError}\n                required\n                // select\n                // label=\"name\"\n                value={selectedCity}\n                onChange={handleCityOnChange}\n                onClose={handleCityOnClose}\n              >\n                {citysArray.map((cityInfo) => (\n                  <option key={cityInfo.cityId} value={cityInfo.cityName}>\n                    {cityInfo.cityName}\n                  </option>\n                ))}\n              </Select>\n              <FormHelperText>Required</FormHelperText>\n              {/* </FormControl> */}\n              {/* <TextField\n                error={selectedCityError}\n                id=\"citySelection\"\n                required\n                select\n                label=\"City\"\n                value={selectedCity}\n                onChange={handleCityOnChange}\n                onClose={handleCityOnClose}\n                helperText=\"Please select your city\"\n              >\n                {citysArray.map((cityInfo) => (\n                  <MenuItem key={cityInfo.cityId} value={cityInfo.cityName}>\n                    {cityInfo.cityName}\n                  </MenuItem>\n                ))}\n              </TextField> */}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                error={emailError}\n                required\n                id=\"emailInput\"\n                label=\"Email\"\n                value={email}\n                helperText=\"Please enter your email\"\n                onChange={handleEmailOnChange}\n                onBlur={handleEmailOnBlur}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Gender</FormLabel>\n                <RadioGroup\n                  error={notificationError}\n                  aria-label=\"ReciveNotification\"\n                  name=\"Recive notification\"\n                  value={notification}\n                  onChange={handleNotificationChange}\n                  onBlur={(event) => handleNotificationOnBlur(event)}\n                >\n                  <FormControlLabel\n                    value=\"Yes\"\n                    control={<Radio />}\n                    label=\"Yes\"\n                  />\n                  <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}